import credits.aleo;
program proof_of_reserves_v0_1_0.aleo;

struct Key:
    user as address;
    hash as field;
    height as u32;

struct Parent:
    left as field;
    right as address;

mapping data:
    key as Key.public;
    value as u64.public;

function record_balances1:
    input r0 as address.private;
    input r1 as [address; 1u32].private;
    cast 0field r1[0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    async record_balances1 r3 self.caller r1 into r4;
    output r4 as proof_of_reserves_v0_1_0.aleo/record_balances1.future;

finalize record_balances1:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [address; 1u32].public;
    get.or_use credits.aleo/account[r2[0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    cast r1 r0 block.height into r5 as Key;
    set r4 into data[r5];

function record_balances2:
    input r0 as address.private;
    input r1 as [address; 2u32].private;
    cast 0field r1[0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    cast r3 r1[1u32] into r4 as Parent;
    hash.bhp512 r4 into r5 as field;
    async record_balances2 r5 self.caller r1 into r6;
    output r6 as proof_of_reserves_v0_1_0.aleo/record_balances2.future;

finalize record_balances2:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [address; 2u32].public;
    get.or_use credits.aleo/account[r2[0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    get.or_use credits.aleo/account[r2[1u32]] 0u64 into r5;
    add r4 r5 into r6;
    cast r1 r0 block.height into r7 as Key;
    set r6 into data[r7];

function record_balances4:
    input r0 as address.private;
    input r1 as [address; 4u32].private;
    cast 0field r1[0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    cast r3 r1[1u32] into r4 as Parent;
    hash.bhp512 r4 into r5 as field;
    cast r5 r1[2u32] into r6 as Parent;
    hash.bhp512 r6 into r7 as field;
    cast r7 r1[3u32] into r8 as Parent;
    hash.bhp512 r8 into r9 as field;
    async record_balances4 r9 self.caller r1 into r10;
    output r10 as proof_of_reserves_v0_1_0.aleo/record_balances4.future;

finalize record_balances4:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [address; 4u32].public;
    get.or_use credits.aleo/account[r2[0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    get.or_use credits.aleo/account[r2[1u32]] 0u64 into r5;
    add r4 r5 into r6;
    get.or_use credits.aleo/account[r2[2u32]] 0u64 into r7;
    add r6 r7 into r8;
    get.or_use credits.aleo/account[r2[3u32]] 0u64 into r9;
    add r8 r9 into r10;
    cast r1 r0 block.height into r11 as Key;
    set r10 into data[r11];

function record_balances8:
    input r0 as address.private;
    input r1 as [address; 8u32].private;
    cast 0field r1[0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    cast r3 r1[1u32] into r4 as Parent;
    hash.bhp512 r4 into r5 as field;
    cast r5 r1[2u32] into r6 as Parent;
    hash.bhp512 r6 into r7 as field;
    cast r7 r1[3u32] into r8 as Parent;
    hash.bhp512 r8 into r9 as field;
    cast r9 r1[4u32] into r10 as Parent;
    hash.bhp512 r10 into r11 as field;
    cast r11 r1[5u32] into r12 as Parent;
    hash.bhp512 r12 into r13 as field;
    cast r13 r1[6u32] into r14 as Parent;
    hash.bhp512 r14 into r15 as field;
    cast r15 r1[7u32] into r16 as Parent;
    hash.bhp512 r16 into r17 as field;
    async record_balances8 r17 self.caller r1 into r18;
    output r18 as proof_of_reserves_v0_1_0.aleo/record_balances8.future;

finalize record_balances8:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [address; 8u32].public;
    get.or_use credits.aleo/account[r2[0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    get.or_use credits.aleo/account[r2[1u32]] 0u64 into r5;
    add r4 r5 into r6;
    get.or_use credits.aleo/account[r2[2u32]] 0u64 into r7;
    add r6 r7 into r8;
    get.or_use credits.aleo/account[r2[3u32]] 0u64 into r9;
    add r8 r9 into r10;
    get.or_use credits.aleo/account[r2[4u32]] 0u64 into r11;
    add r10 r11 into r12;
    get.or_use credits.aleo/account[r2[5u32]] 0u64 into r13;
    add r12 r13 into r14;
    get.or_use credits.aleo/account[r2[6u32]] 0u64 into r15;
    add r14 r15 into r16;
    get.or_use credits.aleo/account[r2[7u32]] 0u64 into r17;
    add r16 r17 into r18;
    cast r1 r0 block.height into r19 as Key;
    set r18 into data[r19];

function record_balances16:
    input r0 as address.private;
    input r1 as [address; 16u32].private;
    cast 0field r1[0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    cast r3 r1[1u32] into r4 as Parent;
    hash.bhp512 r4 into r5 as field;
    cast r5 r1[2u32] into r6 as Parent;
    hash.bhp512 r6 into r7 as field;
    cast r7 r1[3u32] into r8 as Parent;
    hash.bhp512 r8 into r9 as field;
    cast r9 r1[4u32] into r10 as Parent;
    hash.bhp512 r10 into r11 as field;
    cast r11 r1[5u32] into r12 as Parent;
    hash.bhp512 r12 into r13 as field;
    cast r13 r1[6u32] into r14 as Parent;
    hash.bhp512 r14 into r15 as field;
    cast r15 r1[7u32] into r16 as Parent;
    hash.bhp512 r16 into r17 as field;
    cast r17 r1[8u32] into r18 as Parent;
    hash.bhp512 r18 into r19 as field;
    cast r19 r1[9u32] into r20 as Parent;
    hash.bhp512 r20 into r21 as field;
    cast r21 r1[10u32] into r22 as Parent;
    hash.bhp512 r22 into r23 as field;
    cast r23 r1[11u32] into r24 as Parent;
    hash.bhp512 r24 into r25 as field;
    cast r25 r1[12u32] into r26 as Parent;
    hash.bhp512 r26 into r27 as field;
    cast r27 r1[13u32] into r28 as Parent;
    hash.bhp512 r28 into r29 as field;
    cast r29 r1[14u32] into r30 as Parent;
    hash.bhp512 r30 into r31 as field;
    cast r31 r1[15u32] into r32 as Parent;
    hash.bhp512 r32 into r33 as field;
    async record_balances16 r33 self.caller r1 into r34;
    output r34 as proof_of_reserves_v0_1_0.aleo/record_balances16.future;

finalize record_balances16:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [address; 16u32].public;
    get.or_use credits.aleo/account[r2[0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    get.or_use credits.aleo/account[r2[1u32]] 0u64 into r5;
    add r4 r5 into r6;
    get.or_use credits.aleo/account[r2[2u32]] 0u64 into r7;
    add r6 r7 into r8;
    get.or_use credits.aleo/account[r2[3u32]] 0u64 into r9;
    add r8 r9 into r10;
    get.or_use credits.aleo/account[r2[4u32]] 0u64 into r11;
    add r10 r11 into r12;
    get.or_use credits.aleo/account[r2[5u32]] 0u64 into r13;
    add r12 r13 into r14;
    get.or_use credits.aleo/account[r2[6u32]] 0u64 into r15;
    add r14 r15 into r16;
    get.or_use credits.aleo/account[r2[7u32]] 0u64 into r17;
    add r16 r17 into r18;
    get.or_use credits.aleo/account[r2[8u32]] 0u64 into r19;
    add r18 r19 into r20;
    get.or_use credits.aleo/account[r2[9u32]] 0u64 into r21;
    add r20 r21 into r22;
    get.or_use credits.aleo/account[r2[10u32]] 0u64 into r23;
    add r22 r23 into r24;
    get.or_use credits.aleo/account[r2[11u32]] 0u64 into r25;
    add r24 r25 into r26;
    get.or_use credits.aleo/account[r2[12u32]] 0u64 into r27;
    add r26 r27 into r28;
    get.or_use credits.aleo/account[r2[13u32]] 0u64 into r29;
    add r28 r29 into r30;
    get.or_use credits.aleo/account[r2[14u32]] 0u64 into r31;
    add r30 r31 into r32;
    get.or_use credits.aleo/account[r2[15u32]] 0u64 into r33;
    add r32 r33 into r34;
    cast r1 r0 block.height into r35 as Key;
    set r34 into data[r35];

function record_balances32:
    input r0 as address.private;
    input r1 as [address; 32u32].private;
    cast 0field r1[0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    cast r3 r1[1u32] into r4 as Parent;
    hash.bhp512 r4 into r5 as field;
    cast r5 r1[2u32] into r6 as Parent;
    hash.bhp512 r6 into r7 as field;
    cast r7 r1[3u32] into r8 as Parent;
    hash.bhp512 r8 into r9 as field;
    cast r9 r1[4u32] into r10 as Parent;
    hash.bhp512 r10 into r11 as field;
    cast r11 r1[5u32] into r12 as Parent;
    hash.bhp512 r12 into r13 as field;
    cast r13 r1[6u32] into r14 as Parent;
    hash.bhp512 r14 into r15 as field;
    cast r15 r1[7u32] into r16 as Parent;
    hash.bhp512 r16 into r17 as field;
    cast r17 r1[8u32] into r18 as Parent;
    hash.bhp512 r18 into r19 as field;
    cast r19 r1[9u32] into r20 as Parent;
    hash.bhp512 r20 into r21 as field;
    cast r21 r1[10u32] into r22 as Parent;
    hash.bhp512 r22 into r23 as field;
    cast r23 r1[11u32] into r24 as Parent;
    hash.bhp512 r24 into r25 as field;
    cast r25 r1[12u32] into r26 as Parent;
    hash.bhp512 r26 into r27 as field;
    cast r27 r1[13u32] into r28 as Parent;
    hash.bhp512 r28 into r29 as field;
    cast r29 r1[14u32] into r30 as Parent;
    hash.bhp512 r30 into r31 as field;
    cast r31 r1[15u32] into r32 as Parent;
    hash.bhp512 r32 into r33 as field;
    cast r33 r1[16u32] into r34 as Parent;
    hash.bhp512 r34 into r35 as field;
    cast r35 r1[17u32] into r36 as Parent;
    hash.bhp512 r36 into r37 as field;
    cast r37 r1[18u32] into r38 as Parent;
    hash.bhp512 r38 into r39 as field;
    cast r39 r1[19u32] into r40 as Parent;
    hash.bhp512 r40 into r41 as field;
    cast r41 r1[20u32] into r42 as Parent;
    hash.bhp512 r42 into r43 as field;
    cast r43 r1[21u32] into r44 as Parent;
    hash.bhp512 r44 into r45 as field;
    cast r45 r1[22u32] into r46 as Parent;
    hash.bhp512 r46 into r47 as field;
    cast r47 r1[23u32] into r48 as Parent;
    hash.bhp512 r48 into r49 as field;
    cast r49 r1[24u32] into r50 as Parent;
    hash.bhp512 r50 into r51 as field;
    cast r51 r1[25u32] into r52 as Parent;
    hash.bhp512 r52 into r53 as field;
    cast r53 r1[26u32] into r54 as Parent;
    hash.bhp512 r54 into r55 as field;
    cast r55 r1[27u32] into r56 as Parent;
    hash.bhp512 r56 into r57 as field;
    cast r57 r1[28u32] into r58 as Parent;
    hash.bhp512 r58 into r59 as field;
    cast r59 r1[29u32] into r60 as Parent;
    hash.bhp512 r60 into r61 as field;
    cast r61 r1[30u32] into r62 as Parent;
    hash.bhp512 r62 into r63 as field;
    cast r63 r1[31u32] into r64 as Parent;
    hash.bhp512 r64 into r65 as field;
    async record_balances32 r65 self.caller r1 into r66;
    output r66 as proof_of_reserves_v0_1_0.aleo/record_balances32.future;

finalize record_balances32:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [address; 32u32].public;
    get.or_use credits.aleo/account[r2[0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    get.or_use credits.aleo/account[r2[1u32]] 0u64 into r5;
    add r4 r5 into r6;
    get.or_use credits.aleo/account[r2[2u32]] 0u64 into r7;
    add r6 r7 into r8;
    get.or_use credits.aleo/account[r2[3u32]] 0u64 into r9;
    add r8 r9 into r10;
    get.or_use credits.aleo/account[r2[4u32]] 0u64 into r11;
    add r10 r11 into r12;
    get.or_use credits.aleo/account[r2[5u32]] 0u64 into r13;
    add r12 r13 into r14;
    get.or_use credits.aleo/account[r2[6u32]] 0u64 into r15;
    add r14 r15 into r16;
    get.or_use credits.aleo/account[r2[7u32]] 0u64 into r17;
    add r16 r17 into r18;
    get.or_use credits.aleo/account[r2[8u32]] 0u64 into r19;
    add r18 r19 into r20;
    get.or_use credits.aleo/account[r2[9u32]] 0u64 into r21;
    add r20 r21 into r22;
    get.or_use credits.aleo/account[r2[10u32]] 0u64 into r23;
    add r22 r23 into r24;
    get.or_use credits.aleo/account[r2[11u32]] 0u64 into r25;
    add r24 r25 into r26;
    get.or_use credits.aleo/account[r2[12u32]] 0u64 into r27;
    add r26 r27 into r28;
    get.or_use credits.aleo/account[r2[13u32]] 0u64 into r29;
    add r28 r29 into r30;
    get.or_use credits.aleo/account[r2[14u32]] 0u64 into r31;
    add r30 r31 into r32;
    get.or_use credits.aleo/account[r2[15u32]] 0u64 into r33;
    add r32 r33 into r34;
    get.or_use credits.aleo/account[r2[16u32]] 0u64 into r35;
    add r34 r35 into r36;
    get.or_use credits.aleo/account[r2[17u32]] 0u64 into r37;
    add r36 r37 into r38;
    get.or_use credits.aleo/account[r2[18u32]] 0u64 into r39;
    add r38 r39 into r40;
    get.or_use credits.aleo/account[r2[19u32]] 0u64 into r41;
    add r40 r41 into r42;
    get.or_use credits.aleo/account[r2[20u32]] 0u64 into r43;
    add r42 r43 into r44;
    get.or_use credits.aleo/account[r2[21u32]] 0u64 into r45;
    add r44 r45 into r46;
    get.or_use credits.aleo/account[r2[22u32]] 0u64 into r47;
    add r46 r47 into r48;
    get.or_use credits.aleo/account[r2[23u32]] 0u64 into r49;
    add r48 r49 into r50;
    get.or_use credits.aleo/account[r2[24u32]] 0u64 into r51;
    add r50 r51 into r52;
    get.or_use credits.aleo/account[r2[25u32]] 0u64 into r53;
    add r52 r53 into r54;
    get.or_use credits.aleo/account[r2[26u32]] 0u64 into r55;
    add r54 r55 into r56;
    get.or_use credits.aleo/account[r2[27u32]] 0u64 into r57;
    add r56 r57 into r58;
    get.or_use credits.aleo/account[r2[28u32]] 0u64 into r59;
    add r58 r59 into r60;
    get.or_use credits.aleo/account[r2[29u32]] 0u64 into r61;
    add r60 r61 into r62;
    get.or_use credits.aleo/account[r2[30u32]] 0u64 into r63;
    add r62 r63 into r64;
    get.or_use credits.aleo/account[r2[31u32]] 0u64 into r65;
    add r64 r65 into r66;
    cast r1 r0 block.height into r67 as Key;
    set r66 into data[r67];

function record_balances64:
    input r0 as address.private;
    input r1 as [[address; 32u32]; 2u32].private;
    cast 0field r1[0u32][0u32] into r2 as Parent;
    hash.bhp512 r2 into r3 as field;
    cast r3 r1[1u32][0u32] into r4 as Parent;
    hash.bhp512 r4 into r5 as field;
    cast r5 r1[0u32][1u32] into r6 as Parent;
    hash.bhp512 r6 into r7 as field;
    cast r7 r1[1u32][1u32] into r8 as Parent;
    hash.bhp512 r8 into r9 as field;
    cast r9 r1[0u32][2u32] into r10 as Parent;
    hash.bhp512 r10 into r11 as field;
    cast r11 r1[1u32][2u32] into r12 as Parent;
    hash.bhp512 r12 into r13 as field;
    cast r13 r1[0u32][3u32] into r14 as Parent;
    hash.bhp512 r14 into r15 as field;
    cast r15 r1[1u32][3u32] into r16 as Parent;
    hash.bhp512 r16 into r17 as field;
    cast r17 r1[0u32][4u32] into r18 as Parent;
    hash.bhp512 r18 into r19 as field;
    cast r19 r1[1u32][4u32] into r20 as Parent;
    hash.bhp512 r20 into r21 as field;
    cast r21 r1[0u32][5u32] into r22 as Parent;
    hash.bhp512 r22 into r23 as field;
    cast r23 r1[1u32][5u32] into r24 as Parent;
    hash.bhp512 r24 into r25 as field;
    cast r25 r1[0u32][6u32] into r26 as Parent;
    hash.bhp512 r26 into r27 as field;
    cast r27 r1[1u32][6u32] into r28 as Parent;
    hash.bhp512 r28 into r29 as field;
    cast r29 r1[0u32][7u32] into r30 as Parent;
    hash.bhp512 r30 into r31 as field;
    cast r31 r1[1u32][7u32] into r32 as Parent;
    hash.bhp512 r32 into r33 as field;
    cast r33 r1[0u32][8u32] into r34 as Parent;
    hash.bhp512 r34 into r35 as field;
    cast r35 r1[1u32][8u32] into r36 as Parent;
    hash.bhp512 r36 into r37 as field;
    cast r37 r1[0u32][9u32] into r38 as Parent;
    hash.bhp512 r38 into r39 as field;
    cast r39 r1[1u32][9u32] into r40 as Parent;
    hash.bhp512 r40 into r41 as field;
    cast r41 r1[0u32][10u32] into r42 as Parent;
    hash.bhp512 r42 into r43 as field;
    cast r43 r1[1u32][10u32] into r44 as Parent;
    hash.bhp512 r44 into r45 as field;
    cast r45 r1[0u32][11u32] into r46 as Parent;
    hash.bhp512 r46 into r47 as field;
    cast r47 r1[1u32][11u32] into r48 as Parent;
    hash.bhp512 r48 into r49 as field;
    cast r49 r1[0u32][12u32] into r50 as Parent;
    hash.bhp512 r50 into r51 as field;
    cast r51 r1[1u32][12u32] into r52 as Parent;
    hash.bhp512 r52 into r53 as field;
    cast r53 r1[0u32][13u32] into r54 as Parent;
    hash.bhp512 r54 into r55 as field;
    cast r55 r1[1u32][13u32] into r56 as Parent;
    hash.bhp512 r56 into r57 as field;
    cast r57 r1[0u32][14u32] into r58 as Parent;
    hash.bhp512 r58 into r59 as field;
    cast r59 r1[1u32][14u32] into r60 as Parent;
    hash.bhp512 r60 into r61 as field;
    cast r61 r1[0u32][15u32] into r62 as Parent;
    hash.bhp512 r62 into r63 as field;
    cast r63 r1[1u32][15u32] into r64 as Parent;
    hash.bhp512 r64 into r65 as field;
    cast r65 r1[0u32][16u32] into r66 as Parent;
    hash.bhp512 r66 into r67 as field;
    cast r67 r1[1u32][16u32] into r68 as Parent;
    hash.bhp512 r68 into r69 as field;
    cast r69 r1[0u32][17u32] into r70 as Parent;
    hash.bhp512 r70 into r71 as field;
    cast r71 r1[1u32][17u32] into r72 as Parent;
    hash.bhp512 r72 into r73 as field;
    cast r73 r1[0u32][18u32] into r74 as Parent;
    hash.bhp512 r74 into r75 as field;
    cast r75 r1[1u32][18u32] into r76 as Parent;
    hash.bhp512 r76 into r77 as field;
    cast r77 r1[0u32][19u32] into r78 as Parent;
    hash.bhp512 r78 into r79 as field;
    cast r79 r1[1u32][19u32] into r80 as Parent;
    hash.bhp512 r80 into r81 as field;
    cast r81 r1[0u32][20u32] into r82 as Parent;
    hash.bhp512 r82 into r83 as field;
    cast r83 r1[1u32][20u32] into r84 as Parent;
    hash.bhp512 r84 into r85 as field;
    cast r85 r1[0u32][21u32] into r86 as Parent;
    hash.bhp512 r86 into r87 as field;
    cast r87 r1[1u32][21u32] into r88 as Parent;
    hash.bhp512 r88 into r89 as field;
    cast r89 r1[0u32][22u32] into r90 as Parent;
    hash.bhp512 r90 into r91 as field;
    cast r91 r1[1u32][22u32] into r92 as Parent;
    hash.bhp512 r92 into r93 as field;
    cast r93 r1[0u32][23u32] into r94 as Parent;
    hash.bhp512 r94 into r95 as field;
    cast r95 r1[1u32][23u32] into r96 as Parent;
    hash.bhp512 r96 into r97 as field;
    cast r97 r1[0u32][24u32] into r98 as Parent;
    hash.bhp512 r98 into r99 as field;
    cast r99 r1[1u32][24u32] into r100 as Parent;
    hash.bhp512 r100 into r101 as field;
    cast r101 r1[0u32][25u32] into r102 as Parent;
    hash.bhp512 r102 into r103 as field;
    cast r103 r1[1u32][25u32] into r104 as Parent;
    hash.bhp512 r104 into r105 as field;
    cast r105 r1[0u32][26u32] into r106 as Parent;
    hash.bhp512 r106 into r107 as field;
    cast r107 r1[1u32][26u32] into r108 as Parent;
    hash.bhp512 r108 into r109 as field;
    cast r109 r1[0u32][27u32] into r110 as Parent;
    hash.bhp512 r110 into r111 as field;
    cast r111 r1[1u32][27u32] into r112 as Parent;
    hash.bhp512 r112 into r113 as field;
    cast r113 r1[0u32][28u32] into r114 as Parent;
    hash.bhp512 r114 into r115 as field;
    cast r115 r1[1u32][28u32] into r116 as Parent;
    hash.bhp512 r116 into r117 as field;
    cast r117 r1[0u32][29u32] into r118 as Parent;
    hash.bhp512 r118 into r119 as field;
    cast r119 r1[1u32][29u32] into r120 as Parent;
    hash.bhp512 r120 into r121 as field;
    cast r121 r1[0u32][30u32] into r122 as Parent;
    hash.bhp512 r122 into r123 as field;
    cast r123 r1[1u32][30u32] into r124 as Parent;
    hash.bhp512 r124 into r125 as field;
    cast r125 r1[0u32][31u32] into r126 as Parent;
    hash.bhp512 r126 into r127 as field;
    cast r127 r1[1u32][31u32] into r128 as Parent;
    hash.bhp512 r128 into r129 as field;
    async record_balances64 r129 self.caller r1 into r130;
    output r130 as proof_of_reserves_v0_1_0.aleo/record_balances64.future;

finalize record_balances64:
    input r0 as field.public;
    input r1 as address.public;
    input r2 as [[address; 32u32]; 2u32].public;
    get.or_use credits.aleo/account[r2[0u32][0u32]] 0u64 into r3;
    add 0u64 r3 into r4;
    get.or_use credits.aleo/account[r2[1u32][0u32]] 0u64 into r5;
    add r4 r5 into r6;
    get.or_use credits.aleo/account[r2[0u32][1u32]] 0u64 into r7;
    add r6 r7 into r8;
    get.or_use credits.aleo/account[r2[1u32][1u32]] 0u64 into r9;
    add r8 r9 into r10;
    get.or_use credits.aleo/account[r2[0u32][2u32]] 0u64 into r11;
    add r10 r11 into r12;
    get.or_use credits.aleo/account[r2[1u32][2u32]] 0u64 into r13;
    add r12 r13 into r14;
    get.or_use credits.aleo/account[r2[0u32][3u32]] 0u64 into r15;
    add r14 r15 into r16;
    get.or_use credits.aleo/account[r2[1u32][3u32]] 0u64 into r17;
    add r16 r17 into r18;
    get.or_use credits.aleo/account[r2[0u32][4u32]] 0u64 into r19;
    add r18 r19 into r20;
    get.or_use credits.aleo/account[r2[1u32][4u32]] 0u64 into r21;
    add r20 r21 into r22;
    get.or_use credits.aleo/account[r2[0u32][5u32]] 0u64 into r23;
    add r22 r23 into r24;
    get.or_use credits.aleo/account[r2[1u32][5u32]] 0u64 into r25;
    add r24 r25 into r26;
    get.or_use credits.aleo/account[r2[0u32][6u32]] 0u64 into r27;
    add r26 r27 into r28;
    get.or_use credits.aleo/account[r2[1u32][6u32]] 0u64 into r29;
    add r28 r29 into r30;
    get.or_use credits.aleo/account[r2[0u32][7u32]] 0u64 into r31;
    add r30 r31 into r32;
    get.or_use credits.aleo/account[r2[1u32][7u32]] 0u64 into r33;
    add r32 r33 into r34;
    get.or_use credits.aleo/account[r2[0u32][8u32]] 0u64 into r35;
    add r34 r35 into r36;
    get.or_use credits.aleo/account[r2[1u32][8u32]] 0u64 into r37;
    add r36 r37 into r38;
    get.or_use credits.aleo/account[r2[0u32][9u32]] 0u64 into r39;
    add r38 r39 into r40;
    get.or_use credits.aleo/account[r2[1u32][9u32]] 0u64 into r41;
    add r40 r41 into r42;
    get.or_use credits.aleo/account[r2[0u32][10u32]] 0u64 into r43;
    add r42 r43 into r44;
    get.or_use credits.aleo/account[r2[1u32][10u32]] 0u64 into r45;
    add r44 r45 into r46;
    get.or_use credits.aleo/account[r2[0u32][11u32]] 0u64 into r47;
    add r46 r47 into r48;
    get.or_use credits.aleo/account[r2[1u32][11u32]] 0u64 into r49;
    add r48 r49 into r50;
    get.or_use credits.aleo/account[r2[0u32][12u32]] 0u64 into r51;
    add r50 r51 into r52;
    get.or_use credits.aleo/account[r2[1u32][12u32]] 0u64 into r53;
    add r52 r53 into r54;
    get.or_use credits.aleo/account[r2[0u32][13u32]] 0u64 into r55;
    add r54 r55 into r56;
    get.or_use credits.aleo/account[r2[1u32][13u32]] 0u64 into r57;
    add r56 r57 into r58;
    get.or_use credits.aleo/account[r2[0u32][14u32]] 0u64 into r59;
    add r58 r59 into r60;
    get.or_use credits.aleo/account[r2[1u32][14u32]] 0u64 into r61;
    add r60 r61 into r62;
    get.or_use credits.aleo/account[r2[0u32][15u32]] 0u64 into r63;
    add r62 r63 into r64;
    get.or_use credits.aleo/account[r2[1u32][15u32]] 0u64 into r65;
    add r64 r65 into r66;
    get.or_use credits.aleo/account[r2[0u32][16u32]] 0u64 into r67;
    add r66 r67 into r68;
    get.or_use credits.aleo/account[r2[1u32][16u32]] 0u64 into r69;
    add r68 r69 into r70;
    get.or_use credits.aleo/account[r2[0u32][17u32]] 0u64 into r71;
    add r70 r71 into r72;
    get.or_use credits.aleo/account[r2[1u32][17u32]] 0u64 into r73;
    add r72 r73 into r74;
    get.or_use credits.aleo/account[r2[0u32][18u32]] 0u64 into r75;
    add r74 r75 into r76;
    get.or_use credits.aleo/account[r2[1u32][18u32]] 0u64 into r77;
    add r76 r77 into r78;
    get.or_use credits.aleo/account[r2[0u32][19u32]] 0u64 into r79;
    add r78 r79 into r80;
    get.or_use credits.aleo/account[r2[1u32][19u32]] 0u64 into r81;
    add r80 r81 into r82;
    get.or_use credits.aleo/account[r2[0u32][20u32]] 0u64 into r83;
    add r82 r83 into r84;
    get.or_use credits.aleo/account[r2[1u32][20u32]] 0u64 into r85;
    add r84 r85 into r86;
    get.or_use credits.aleo/account[r2[0u32][21u32]] 0u64 into r87;
    add r86 r87 into r88;
    get.or_use credits.aleo/account[r2[1u32][21u32]] 0u64 into r89;
    add r88 r89 into r90;
    get.or_use credits.aleo/account[r2[0u32][22u32]] 0u64 into r91;
    add r90 r91 into r92;
    get.or_use credits.aleo/account[r2[1u32][22u32]] 0u64 into r93;
    add r92 r93 into r94;
    get.or_use credits.aleo/account[r2[0u32][23u32]] 0u64 into r95;
    add r94 r95 into r96;
    get.or_use credits.aleo/account[r2[1u32][23u32]] 0u64 into r97;
    add r96 r97 into r98;
    get.or_use credits.aleo/account[r2[0u32][24u32]] 0u64 into r99;
    add r98 r99 into r100;
    get.or_use credits.aleo/account[r2[1u32][24u32]] 0u64 into r101;
    add r100 r101 into r102;
    get.or_use credits.aleo/account[r2[0u32][25u32]] 0u64 into r103;
    add r102 r103 into r104;
    get.or_use credits.aleo/account[r2[1u32][25u32]] 0u64 into r105;
    add r104 r105 into r106;
    get.or_use credits.aleo/account[r2[0u32][26u32]] 0u64 into r107;
    add r106 r107 into r108;
    get.or_use credits.aleo/account[r2[1u32][26u32]] 0u64 into r109;
    add r108 r109 into r110;
    get.or_use credits.aleo/account[r2[0u32][27u32]] 0u64 into r111;
    add r110 r111 into r112;
    get.or_use credits.aleo/account[r2[1u32][27u32]] 0u64 into r113;
    add r112 r113 into r114;
    get.or_use credits.aleo/account[r2[0u32][28u32]] 0u64 into r115;
    add r114 r115 into r116;
    get.or_use credits.aleo/account[r2[1u32][28u32]] 0u64 into r117;
    add r116 r117 into r118;
    get.or_use credits.aleo/account[r2[0u32][29u32]] 0u64 into r119;
    add r118 r119 into r120;
    get.or_use credits.aleo/account[r2[1u32][29u32]] 0u64 into r121;
    add r120 r121 into r122;
    get.or_use credits.aleo/account[r2[0u32][30u32]] 0u64 into r123;
    add r122 r123 into r124;
    get.or_use credits.aleo/account[r2[1u32][30u32]] 0u64 into r125;
    add r124 r125 into r126;
    get.or_use credits.aleo/account[r2[0u32][31u32]] 0u64 into r127;
    add r126 r127 into r128;
    get.or_use credits.aleo/account[r2[1u32][31u32]] 0u64 into r129;
    add r128 r129 into r130;
    cast r1 r0 block.height into r131 as Key;
    set r130 into data[r131];
